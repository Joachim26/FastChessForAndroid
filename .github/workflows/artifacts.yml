name: Upload Artifacts

on:
  workflow_dispatch:
  workflow_call:
   
jobs:
  Archive:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      COMPILER: ${{ matrix.config.compiler }}
      COMP: ${{ matrix.config.comp }}
      EXT: ${{ matrix.config.ext }}
      OS: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
              name: "Ubuntu 22.04 GCC",
              os: ubuntu-22.04,
              compiler: g++,
              comp: gcc,
              shell: "bash {0}",
            }
          - {
              name: "MacOS Apple Clang",
              os: macos-latest,
              compiler: clang++,
              comp: clang,
              shell: "bash {0}",
            }
          - {
              name: "Windows GCC",
              os: windows-latest,
              compiler: g++,
              comp: MINGW,
              msys_sys: "mingw64",
              msys_env: "x86_64-gcc",
              shell: "msys2 {0}",
              ext: .exe,
            }
    defaults:
      run:
        shell: ${{ matrix.config.shell }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Installing required packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install g++-multilib
          g++ --version

      - name: Install windows make
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.config.msys_sys}}
          install: mingw-w64-${{matrix.config.msys_env}} make git expect

      - name: Extract the commit sha
        run: |
          git rev-parse --short "$GITHUB_SHA" > sha && echo "git_sha=$(cat sha)" >> $GITHUB_ENV && echo "Git sha:" $(cat sha)

      # Compiles

      - name: Building Fast-Chess
        run: |
          make -j2 build=release
          strip ./fast-chess$EXT
          mv fast-chess$EXT fast-chess-$OS$EXT
          ./fast-chess* -version

      - name: Find and remove empty files
        run: rm -rf *.o *.d sha
        shell: bash

      - name: Archive binaries
        uses: actions/upload-artifact@v3
        with:
          name: fast-chess-${{ matrix.config.os }}
          path: |
            src
            tests
            README.md
            LICENSE
            fast-chess-${{ matrix.config.os }}${{ matrix.config.ext }}
